from Models import app_data
from Sites import site_prodoctorov_actions
from PyQt5 import QtCore, QtGui, QtWidgets
import data_preprocessing


app_data = app_data.AppData()


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(742, 528)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.frame_list = QtWidgets.QFrame(self.centralwidget)
        self.frame_list.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_list.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_list.setObjectName("frame_list")
        self.gridLayout.addWidget(self.frame_list, 3, 2, 1, 1)
        self.frame_stats = QtWidgets.QFrame(self.centralwidget)
        self.frame_stats.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_stats.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_stats.setObjectName("frame_stats")
        self.gridLayout.addWidget(self.frame_stats, 2, 2, 1, 1)
        self.frame_graphs = QtWidgets.QFrame(self.centralwidget)
        self.frame_graphs.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_graphs.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_graphs.setObjectName("frame_graphs")
        self.gridLayout.addWidget(self.frame_graphs, 2, 0, 2, 2)
        self.frame_buttons = QtWidgets.QFrame(self.centralwidget)
        self.frame_buttons.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_buttons.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_buttons.setObjectName("frame_buttons")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame_buttons)
        self.verticalLayout.setObjectName("verticalLayout")
        self.button_download_data = QtWidgets.QPushButton(self.frame_buttons)
        self.button_download_data.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.button_download_data.setFont(font)
        self.button_download_data.setObjectName("button_download_data")
        self.verticalLayout.addWidget(self.button_download_data)
        self.button_upload_data = QtWidgets.QPushButton(self.frame_buttons)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.button_upload_data.setFont(font)
        self.button_upload_data.setObjectName("button_upload_data")
        self.verticalLayout.addWidget(self.button_upload_data)
        self.button_upload_json = QtWidgets.QPushButton(self.frame_buttons)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.button_upload_json.setFont(font)
        self.button_upload_json.setObjectName("button_upload_json")
        self.verticalLayout.addWidget(self.button_upload_json)
        self.button_clinic_info = QtWidgets.QPushButton(self.frame_buttons)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.button_clinic_info.setFont(font)
        self.button_clinic_info.setObjectName("button_clinic_info")
        self.verticalLayout.addWidget(self.button_clinic_info)
        self.gridLayout.addWidget(self.frame_buttons, 0, 2, 1, 1)
        self.frame_inputs = QtWidgets.QFrame(self.centralwidget)
        self.frame_inputs.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_inputs.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_inputs.setObjectName("frame_inputs")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_inputs)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.frame_inputs_2 = QtWidgets.QFrame(self.frame_inputs)
        self.frame_inputs_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_inputs_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_inputs_2.setObjectName("frame_inputs_2")
        self.label_city_2 = QtWidgets.QLabel(self.frame_inputs_2)
        self.label_city_2.setGeometry(QtCore.QRect(60, 50, 61, 16))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.label_city_2.setFont(font)
        self.label_city_2.setObjectName("label_city_2")
        self.input_city = QtWidgets.QLineEdit(self.frame_inputs_2)
        self.input_city.setGeometry(QtCore.QRect(120, 20, 100, 20))
        self.input_city.setObjectName("input_city")
        self.label_city = QtWidgets.QLabel(self.frame_inputs_2)
        self.label_city.setGeometry(QtCore.QRect(70, 20, 51, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.label_city.setFont(font)
        self.label_city.setObjectName("label_city")
        self.input_clinic = QtWidgets.QLineEdit(self.frame_inputs_2)
        self.input_clinic.setGeometry(QtCore.QRect(120, 50, 100, 20))
        self.input_clinic.setObjectName("input_clinic")
        self.horizontalLayout.addWidget(self.frame_inputs_2)
        self.frame_inputs_ks = QtWidgets.QFrame(self.frame_inputs)
        self.frame_inputs_ks.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_inputs_ks.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_inputs_ks.setObjectName("frame_inputs_ks")
        self.input_k_experience_importance = QtWidgets.QLineEdit(self.frame_inputs_ks)
        self.input_k_experience_importance.setGeometry(QtCore.QRect(195, 70, 30, 20))
        self.input_k_experience_importance.setObjectName("input_k_experience_importance")
        self.input_k_review_importance = QtWidgets.QLineEdit(self.frame_inputs_ks)
        self.input_k_review_importance.setGeometry(QtCore.QRect(195, 40, 30, 20))
        self.input_k_review_importance.setObjectName("input_k_review_importance")
        self.input_k_price_importance = QtWidgets.QLineEdit(self.frame_inputs_ks)
        self.input_k_price_importance.setGeometry(QtCore.QRect(195, 10, 30, 21))
        self.input_k_price_importance.setObjectName("input_k_price_importance")
        self.label_k_experience_importance = QtWidgets.QLabel(self.frame_inputs_ks)
        self.label_k_experience_importance.setGeometry(QtCore.QRect(5, 70, 161, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.label_k_experience_importance.setFont(font)
        self.label_k_experience_importance.setObjectName("label_k_experience_importance")
        self.label_k_price_importance = QtWidgets.QLabel(self.frame_inputs_ks)
        self.label_k_price_importance.setGeometry(QtCore.QRect(5, 10, 184, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.label_k_price_importance.setFont(font)
        self.label_k_price_importance.setObjectName("label_k_price_importance")
        self.label_k_review_importance = QtWidgets.QLabel(self.frame_inputs_ks)
        self.label_k_review_importance.setGeometry(QtCore.QRect(5, 40, 169, 20))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.label_k_review_importance.setFont(font)
        self.label_k_review_importance.setObjectName("label_k_review_importance")
        self.horizontalLayout.addWidget(self.frame_inputs_ks)
        self.gridLayout.addWidget(self.frame_inputs, 0, 0, 1, 2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 742, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.click_buttons()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.button_download_data.setText(_translate("MainWindow", "Скачать данные с сайта"))
        self.button_upload_data.setText(_translate("MainWindow", "Загрузить данные с файла"))
        self.button_upload_json.setText(_translate("MainWindow", "Сохранить данные в файл"))
        self.button_clinic_info.setText(_translate("MainWindow", "Информация по клинике"))
        self.label_city_2.setText(_translate("MainWindow", "Клиника:"))
        self.label_city.setText(_translate("MainWindow", "Город:"))
        self.label_k_experience_importance.setText(_translate("MainWindow", "Коэф. значимости стажа:"))
        self.label_k_price_importance.setText(_translate("MainWindow", "Коэф. значимости стоимости:"))
        self.label_k_review_importance.setText(_translate("MainWindow", "Коэф. значимости отзывов:"))

    def click_buttons(self):
        self.button_download_data.clicked.connect(self.parse_data_from_site)
        self.button_upload_data.clicked.connect(self.upload_data_from_json)
        self.button_upload_json.clicked.connect(self.upload_json_from_app_data)

    # TODO: Need to unenable button
    # TODO: 1) Need to investigate way to use selenium driver;
    # TODO: 2) Need to analyze which preprocessing functions include
    # TODO: 3) Need to add approximate waiting time for downloading data and loading bar
    def parse_data_from_site(self, driver):
        list_prices = site_prodoctorov_actions.test_get_dentistry_prices(driver)
        list_clinics = site_prodoctorov_actions.test_get_dental_clinics_common_info(driver)
        list_clinics_prices, list_doctors_info = site_prodoctorov_actions.test_get_clinic_doctors_and_prices_info(driver)
        data_clinics_prices_total = data_preprocessing.get_data_clinics_prices_total()

    def upload_data_from_json(self):
        self.input_city.setText(app_data.get_city())
        self.input_clinic.setText(app_data.get_clinic())
        self.input_k_price_importance.setText(str(app_data.get_k_price_importance()))
        self.input_k_experience_importance.setText(str(app_data.get_k_experience_importance()))
        self.input_k_review_importance.setText(str(app_data.get_k_review_importance()))

    # TODO: Need to fix encoding, rewrite_json
    def upload_json_from_app_data(self):
        app_data.set_city(self.input_city.text())
        app_data.set_clinic(self.input_clinic.text())
        text_k_price_importance = self.input_k_price_importance.text()
        app_data.set_k_price_importance(int(text_k_price_importance)) if text_k_price_importance else 0
        text_k_experience_importance = self.input_k_experience_importance.text()
        app_data.set_k_experience_importance(int(self.input_k_experience_importance.text())) if text_k_experience_importance else 0
        text_k_review_importance = self.input_k_review_importance.text()
        app_data.set_k_review_importance(int(self.input_k_review_importance.text())) if text_k_review_importance else 0
        app_data.rewrite_json()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
